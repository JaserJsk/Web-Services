//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VehicleClient.VehicleServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/VehicleIncServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Car : VehicleClient.VehicleServiceReference.Vehicle {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NbrOfDoorsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NbrOfDoors {
            get {
                return this.NbrOfDoorsField;
            }
            set {
                if ((this.NbrOfDoorsField.Equals(value) != true)) {
                    this.NbrOfDoorsField = value;
                    this.RaisePropertyChanged("NbrOfDoors");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://schemas.datacontract.org/2004/07/VehicleIncServiceLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VehicleClient.VehicleServiceReference.Motorcycle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(VehicleClient.VehicleServiceReference.Car))]
    public partial class Vehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MotorPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WheelsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MotorPower {
            get {
                return this.MotorPowerField;
            }
            set {
                if ((this.MotorPowerField.Equals(value) != true)) {
                    this.MotorPowerField = value;
                    this.RaisePropertyChanged("MotorPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wheels {
            get {
                return this.WheelsField;
            }
            set {
                if ((this.WheelsField.Equals(value) != true)) {
                    this.WheelsField = value;
                    this.RaisePropertyChanged("Wheels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Motorcycle", Namespace="http://schemas.datacontract.org/2004/07/VehicleIncServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Motorcycle : VehicleClient.VehicleServiceReference.Vehicle {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VehicleServiceReference.IVehicleService")]
    public interface IVehicleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetCars", ReplyAction="http://tempuri.org/IVehicleService/GetCarsResponse")]
        VehicleClient.VehicleServiceReference.Car[] GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetCars", ReplyAction="http://tempuri.org/IVehicleService/GetCarsResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Car[]> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetMotorcycles", ReplyAction="http://tempuri.org/IVehicleService/GetMotorcyclesResponse")]
        VehicleClient.VehicleServiceReference.Motorcycle[] GetMotorcycles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/GetMotorcycles", ReplyAction="http://tempuri.org/IVehicleService/GetMotorcyclesResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Motorcycle[]> GetMotorcyclesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/ByCar", ReplyAction="http://tempuri.org/IVehicleService/ByCarResponse")]
        void ByCar(VehicleClient.VehicleServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/ByCar", ReplyAction="http://tempuri.org/IVehicleService/ByCarResponse")]
        System.Threading.Tasks.Task ByCarAsync(VehicleClient.VehicleServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/ByMotorcycle", ReplyAction="http://tempuri.org/IVehicleService/ByMotorcycleResponse")]
        void ByMotorcycle(VehicleClient.VehicleServiceReference.Motorcycle motorcycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/ByMotorcycle", ReplyAction="http://tempuri.org/IVehicleService/ByMotorcycleResponse")]
        System.Threading.Tasks.Task ByMotorcycleAsync(VehicleClient.VehicleServiceReference.Motorcycle motorcycle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/SellCar", ReplyAction="http://tempuri.org/IVehicleService/SellCarResponse")]
        VehicleClient.VehicleServiceReference.Car SellCar(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/SellCar", ReplyAction="http://tempuri.org/IVehicleService/SellCarResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Car> SellCarAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/SellMotorcycle", ReplyAction="http://tempuri.org/IVehicleService/SellMotorcycleResponse")]
        VehicleClient.VehicleServiceReference.Motorcycle SellMotorcycle(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVehicleService/SellMotorcycle", ReplyAction="http://tempuri.org/IVehicleService/SellMotorcycleResponse")]
        System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Motorcycle> SellMotorcycleAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleServiceChannel : VehicleClient.VehicleServiceReference.IVehicleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleServiceClient : System.ServiceModel.ClientBase<VehicleClient.VehicleServiceReference.IVehicleService>, VehicleClient.VehicleServiceReference.IVehicleService {
        
        public VehicleServiceClient() {
        }
        
        public VehicleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public VehicleClient.VehicleServiceReference.Car[] GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Car[]> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public VehicleClient.VehicleServiceReference.Motorcycle[] GetMotorcycles() {
            return base.Channel.GetMotorcycles();
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Motorcycle[]> GetMotorcyclesAsync() {
            return base.Channel.GetMotorcyclesAsync();
        }
        
        public void ByCar(VehicleClient.VehicleServiceReference.Car car) {
            base.Channel.ByCar(car);
        }
        
        public System.Threading.Tasks.Task ByCarAsync(VehicleClient.VehicleServiceReference.Car car) {
            return base.Channel.ByCarAsync(car);
        }
        
        public void ByMotorcycle(VehicleClient.VehicleServiceReference.Motorcycle motorcycle) {
            base.Channel.ByMotorcycle(motorcycle);
        }
        
        public System.Threading.Tasks.Task ByMotorcycleAsync(VehicleClient.VehicleServiceReference.Motorcycle motorcycle) {
            return base.Channel.ByMotorcycleAsync(motorcycle);
        }
        
        public VehicleClient.VehicleServiceReference.Car SellCar(int Id) {
            return base.Channel.SellCar(Id);
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Car> SellCarAsync(int Id) {
            return base.Channel.SellCarAsync(Id);
        }
        
        public VehicleClient.VehicleServiceReference.Motorcycle SellMotorcycle(int Id) {
            return base.Channel.SellMotorcycle(Id);
        }
        
        public System.Threading.Tasks.Task<VehicleClient.VehicleServiceReference.Motorcycle> SellMotorcycleAsync(int Id) {
            return base.Channel.SellMotorcycleAsync(Id);
        }
    }
}
