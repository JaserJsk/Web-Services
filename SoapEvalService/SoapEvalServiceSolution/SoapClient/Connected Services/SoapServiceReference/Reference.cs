//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoapClient.SoapServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/SoapServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Book : SoapClient.SoapServiceReference.Media {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Media", Namespace="http://schemas.datacontract.org/2004/07/SoapServiceLibrary")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapClient.SoapServiceReference.Paper))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(SoapClient.SoapServiceReference.Book))]
    public partial class Media : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NbrOfPagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NbrOfPages {
            get {
                return this.NbrOfPagesField;
            }
            set {
                if ((this.NbrOfPagesField.Equals(value) != true)) {
                    this.NbrOfPagesField = value;
                    this.RaisePropertyChanged("NbrOfPages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Paper", Namespace="http://schemas.datacontract.org/2004/07/SoapServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Paper : SoapClient.SoapServiceReference.Media {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SoapServiceReference.IMediaService")]
    public interface IMediaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/GetAllBooks", ReplyAction="http://tempuri.org/IMediaService/GetAllBooksResponse")]
        SoapClient.SoapServiceReference.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/GetAllBooks", ReplyAction="http://tempuri.org/IMediaService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/PostBooks", ReplyAction="http://tempuri.org/IMediaService/PostBooksResponse")]
        void PostBooks(SoapClient.SoapServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/PostBooks", ReplyAction="http://tempuri.org/IMediaService/PostBooksResponse")]
        System.Threading.Tasks.Task PostBooksAsync(SoapClient.SoapServiceReference.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/RemoveBookFromLIbrary", ReplyAction="http://tempuri.org/IMediaService/RemoveBookFromLIbraryResponse")]
        SoapClient.SoapServiceReference.Book RemoveBookFromLIbrary(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/RemoveBookFromLIbrary", ReplyAction="http://tempuri.org/IMediaService/RemoveBookFromLIbraryResponse")]
        System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Book> RemoveBookFromLIbraryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/GetAllPapers", ReplyAction="http://tempuri.org/IMediaService/GetAllPapersResponse")]
        SoapClient.SoapServiceReference.Paper[] GetAllPapers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/GetAllPapers", ReplyAction="http://tempuri.org/IMediaService/GetAllPapersResponse")]
        System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Paper[]> GetAllPapersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/PostPaper", ReplyAction="http://tempuri.org/IMediaService/PostPaperResponse")]
        void PostPaper(SoapClient.SoapServiceReference.Paper paper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/PostPaper", ReplyAction="http://tempuri.org/IMediaService/PostPaperResponse")]
        System.Threading.Tasks.Task PostPaperAsync(SoapClient.SoapServiceReference.Paper paper);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/RemovePaperFromLIbrary", ReplyAction="http://tempuri.org/IMediaService/RemovePaperFromLIbraryResponse")]
        SoapClient.SoapServiceReference.Paper RemovePaperFromLIbrary(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMediaService/RemovePaperFromLIbrary", ReplyAction="http://tempuri.org/IMediaService/RemovePaperFromLIbraryResponse")]
        System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Paper> RemovePaperFromLIbraryAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMediaServiceChannel : SoapClient.SoapServiceReference.IMediaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MediaServiceClient : System.ServiceModel.ClientBase<SoapClient.SoapServiceReference.IMediaService>, SoapClient.SoapServiceReference.IMediaService {
        
        public MediaServiceClient() {
        }
        
        public MediaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MediaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SoapClient.SoapServiceReference.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void PostBooks(SoapClient.SoapServiceReference.Book book) {
            base.Channel.PostBooks(book);
        }
        
        public System.Threading.Tasks.Task PostBooksAsync(SoapClient.SoapServiceReference.Book book) {
            return base.Channel.PostBooksAsync(book);
        }
        
        public SoapClient.SoapServiceReference.Book RemoveBookFromLIbrary(int id) {
            return base.Channel.RemoveBookFromLIbrary(id);
        }
        
        public System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Book> RemoveBookFromLIbraryAsync(int id) {
            return base.Channel.RemoveBookFromLIbraryAsync(id);
        }
        
        public SoapClient.SoapServiceReference.Paper[] GetAllPapers() {
            return base.Channel.GetAllPapers();
        }
        
        public System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Paper[]> GetAllPapersAsync() {
            return base.Channel.GetAllPapersAsync();
        }
        
        public void PostPaper(SoapClient.SoapServiceReference.Paper paper) {
            base.Channel.PostPaper(paper);
        }
        
        public System.Threading.Tasks.Task PostPaperAsync(SoapClient.SoapServiceReference.Paper paper) {
            return base.Channel.PostPaperAsync(paper);
        }
        
        public SoapClient.SoapServiceReference.Paper RemovePaperFromLIbrary(int id) {
            return base.Channel.RemovePaperFromLIbrary(id);
        }
        
        public System.Threading.Tasks.Task<SoapClient.SoapServiceReference.Paper> RemovePaperFromLIbraryAsync(int id) {
            return base.Channel.RemovePaperFromLIbraryAsync(id);
        }
    }
}
